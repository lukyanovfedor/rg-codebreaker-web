!function(e,t,r,o){"use strict";var n=r.module("codebreaker",["ui.router","ngResource","btford.modal"]);n.config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("game",{url:"/",templateUrl:"game.html",controller:"GameCtrl",controllerAs:"gm",resolve:{game:["GameRsc",function(e){return e.get({fresh:!0}).$promise}]}}).state("results",{url:"/results",templateUrl:"results.html",controller:"ResultCtrl",controllerAs:"rs",resolve:{result:["ResultRsc",function(e){return e.get().$promise}]}}),t.otherwise("/")}]),n.config(["$httpProvider",function(e){e.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded",e.defaults.headers.put["Content-Type"]="application/x-www-form-urlencoded",e.defaults.transformRequest=function(e){var t=function(e){var r,n,l,s,u,a,c="";for(r in e)if(n=e[r],n instanceof Array)for(a=0;a<n.length;++a)s=n[a],l=r+"["+a+"]",u={},u[l]=s,c+=t(u)+"&";else if(n instanceof Object)for(var i in n)s=n[i],l=r+"["+i+"]",u={},u[l]=s,c+=t(u)+"&";else n!==o&&null!==n&&(c+=encodeURIComponent(r)+"="+encodeURIComponent(n)+"&");return c.length?c.substr(0,c.length-1):c};return r.isObject(e)&&"[object File]"!==String(e)?t(e):e}}]),n.factory("GameOverModal",["btfModal",function(e){return e({controller:"GameOverCtrl",controllerAs:"go",templateUrl:"game-over.html"})}])}(window,document,window.angular);
!function(e,t,a,n){"use strict";function s(e,t,a){var n=this;n.game=e||{},n.code={set:function(e){var a=this;a.value.length>=4||(e=parseInt(e,10),1>e||e>6||(a.value.push(e),4===a.value.length&&t.gues({data:a.value.join("")}).$promise.then(function(e){return"++++"===e.result?s("win"):e.attempts?(a.tries.push({attempt:a.value.join(""),result:e.result||"No matches"}),a.value=[],void a.attempts--):s("lose")})))},remove:function(){this.value.length&&this.value.pop()},value:[],attempts:n.game.attempts||0,tries:[]},n.hint={get:function(){var e=this;e.available&&t.hint().$promise.then(function(t){t.result&&e.values.push(t.result),e.available=t.hints})},values:[],available:n.game.hints||0};var s=function(e){a.activate({status:e})}}var u=a.module("codebreaker");u.controller("GameCtrl",["game","GameRsc","GameOverModal",s])}(window,document,window.angular);
!function(e,t,a,o){"use strict";function n(e,t,a,o){var n=this;n.msg="win"===t.status?"Congratulations you are won!":"Oops you are loosed ;(",n.name="",n.startNew=function(){a.deactivate(),o.get("$state").go("game",{},{reload:!0})},n.saveResult=function(){n.name&&e.save({name:n.name}).$promise.then(function(){a.deactivate(),o.get("$state").go("results")})}}var s=a.module("codebreaker");s.controller("GameOverCtrl",["ResultRsc","$scope","GameOverModal","$injector",n])}(window,document,window.angular);
!function(e,t,n,o){"use strict";function r(e,t){var n=this;n.result=e||[],n.newGame=function(){t.get("$state").go("game",{},{reload:!0})}}var u=n.module("codebreaker");u.controller("ResultCtrl",["result","$injector",r])}(window,document,window.angular);
!function(a,e,t,n){"use strict";var o=t.module("codebreaker");o.factory("GameRsc",["$resource",function(a){return a("/game/:action/:data",null,{gues:{method:"GET",params:{action:"gues"}},hint:{method:"GET",params:{action:"hint"}}})}])}(window,document,angular);
!function(e,r,t,u){"use strict";var n=t.module("codebreaker");n.factory("ResultRsc",["$resource",function(e){return e("/result",null,{get:{method:"GET",isArray:!0}})}])}(window,document,angular);
angular.module("codebreaker").run(["$templateCache",function(e){e.put("game-over.html",'<div class="game-over-overlay">\n	<div class="game-over btf-modal">\n		<h2>{{go.msg}}</h2>\n		<h3>Wanna save result?</h3>\n\n		<div class="buttons">\n			<div ng-click="showName = true">yes</div>\n			<div ng-click="go.startNew()">no, start new game</div>\n		</div>\n\n		<div class="save-result cf" ng-if="showName">\n			<input type="text" placeholder="Enter your name" ng-model="go.name" />\n\n			<a href="" ng-click="go.saveResult()">save</a>\n		</div>\n	</div>\n</div>')}]);
angular.module("codebreaker").run(["$templateCache",function(n){n.put("game.html",'<div class="cf">\n	<div class="game">\n		<div class="code-try cf" ng-init="isDisabled = true">\n			<div class="field">\n				<input type="text" disabled="{{isDisabled}}" ng-model="gm.code.value[0]" />\n			</div>\n\n			<div class="field">\n				<input type="text" disabled="{{isDisabled}}" ng-model="gm.code.value[1]" />\n			</div>\n\n			<div class="field">\n				<input type="text" disabled="{{isDisabled}}" ng-model="gm.code.value[2]" />\n			</div>\n\n			<div class="field">\n				<input type="text" disabled="{{isDisabled}}" ng-model="gm.code.value[3]" />\n			</div>\n		</div>\n\n		<div class="control cf">\n			<div class="btn number" ng-click="gm.code.set(1)">\n				1\n			</div>\n\n			<div class="btn number" ng-click="gm.code.set(2)">\n				2\n			</div>\n\n			<div class="btn number" ng-click="gm.code.set(3)">\n				3\n			</div>\n\n			<div class="btn number no-margin" ng-click="gm.code.set(4)">\n				4\n			</div>\n\n			<div class="btn number" ng-click="gm.code.set(5)">\n				5\n			</div>\n\n			<div class="btn number" ng-click="gm.code.set(6)">\n				6\n			</div>\n\n			<div class="btn remove-last" ng-click="gm.code.remove()">\n				<i class="ico"></i>\n			</div>\n\n			<div class="btn hint no-margin" ng-click="gm.hint.get()" ng-class="{disabled: !gm.hint.available}">\n				?\n			</div>\n		</div>\n	</div>\n\n	<div class="hints-tries">\n		<div class="used">\n			Left: {{ gm.code.attempts }}\n		</div>\n\n		<div class="hints">\n			<div ng-if="gm.hint.values.length">\n				Hint: <b>{{ gm.hint.values.join("") }}</b>\n			</div>\n\n			<div ng-if="gm.hint.available">\n				Hints available: <b>{{gm.hint.available}}</b>\n			</div>\n\n			<div ng-if="!gm.hint.available">\n				<b>All hints used</b>\n			</div>\n		</div>\n\n		<table class="tries">\n			<thead>\n				<tr>\n					<th>\n						Attempt\n					</th>\n\n					<th>\n						Result\n					</th>\n				</tr>\n			</thead>\n\n			<tbody>\n				<tr ng-repeat="t in gm.code.tries">\n					<td>\n						{{t.attempt}}\n					</td>\n\n					<td>\n						{{t.result}}\n					</td>\n				</tr>\n			</tbody>\n		</table>\n	</div>\n</div>')}]);
angular.module("codebreaker").run(["$templateCache",function(n){n.put("results.html",'<div ng-if="rs.result.length" class="result">\n	<table>\n		<thead>\n			<th>\n				#\n			</th>\n\n			<th>\n				Name\n			</th>\n\n			<th>\n				Status\n			</th>\n\n			<th>\n				Used\n			</th>\n\n			<th>\n				Code\n			</th>\n		</thead>\n\n		<tbody>\n			<tr ng-repeat="r in rs.result">\n				<td>\n					{{ $index + 1}}\n				</td>\n\n				<td>\n					{{ r.name }}\n				</td>\n\n				<td>\n					{{ r.status }}\n				</td>\n\n				<td>\n					{{ r.used }}\n				</td>\n\n				<td>\n					{{ r.code }}\n				</td>\n			</tr>\n		</tbody>\n	</table>\n</div>\n\n<div ng-if="!rs.result.length" class="result-empty">\n	Results are empty. Play a little bit;)\n</div>\n\n<div class="results-play" ng-click="rs.newGame()">\n	New game\n</div>')}]);